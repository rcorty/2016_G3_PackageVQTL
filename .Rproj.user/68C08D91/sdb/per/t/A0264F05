{
    "collab_server" : "",
    "contents" : "library(tidyr); library(dplyr); library(vqtl)\n\n## Add an alpha value to a colour\nadd.alpha <- function(col, alpha=1){\n\tif (missing(col)) { stop(\"Please provide a vector of colours.\") }\n\tapply(sapply(col, col2rgb)/255, 2,\n\t\t\t\tfunction(x)\n\t\t\t\t\trgb(x[1], x[2], x[3], alpha = alpha))\n}\n\nset.seed(2)\n\nmy.cross <- sim.cross(map = sim.map(len = rep(100, 4), n.mar = 30, eq.spacing = TRUE, include.x = FALSE),\n\t\t\t\t\t\t\t\t\t\t\tn.ind = 200,\n\t\t\t\t\t\t\t\t\t\t\ttype = 'f2')\nmy.cross$pheno$sex <- rep(x = c(0, 1), each = 100)\nmy.cross <- calc.genoprob(my.cross)\n\nmy.cross$pheno$phenotype1 <- rnorm(n = nind(my.cross))\nmy.cross$pheno$phenotype2 <- rnorm(n = nind(my.cross), mean = 0.8*my.cross$geno$`1`$data[,15])\nmy.cross$pheno$phenotype3 <- rnorm(n = nind(my.cross), sd = my.cross$geno$`2`$data[,15])\nmy.cross$pheno$phenotype4 <- rnorm(n = nind(my.cross), mean = my.cross$geno$`3`$data[,15], sd = my.cross$geno$`3`$data[,15])\n\n\na1 <- scanonevar.perm(cross = my.cross,\n\t\t\t\t\t\t\t\t\t\t\tmean.formula = 'phenotype2 ~ sex + mean.QTL.add + mean.QTL.dom',\n\t\t\t\t\t\t\t\t\t\t\tvar.formula = '~sex + var.QTL.add + var.QTL.dom',\n\t\t\t\t\t\t\t\t\t\t\tn.perms = 5,\n\t\t\t\t\t\t\t\t\t\t\tverbose.return = TRUE)\na1max <- a1 %>% group_by(perm) %>% summarise(max.full.lod = max(full.lod),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t max.mean.lod = max(mean.lod),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t max.var.lod = max(var.lod))\n\na2 <- list()\nfor (i in 1:5) {\n\tmy.cross$pheno$phenotype2 <- sample(my.cross$pheno$phenotype2)\n\ta2[[i]] <- scanone(cross = my.cross,\n\t\t\t\t\t\t\t\t\t\t pheno.col = 'phenotype2')\n\ta2[[i]][['perm']] <- i\n}\na2 <- rbind_all(a2)\n\n\n\n\n\n\n\n# pdf(file = '../2016_G3_PackageVQTL_Corty/images/FWER.pdf', width = 6, height = 8)\npar(mar = c(2.1, 3.1, 3.1, 0.1), xpd = FALSE)\nlayout(mat = matrix(data = c(1:20), ncol = 5), widths = c(7, 3/4, 3/4, 3/4))\nylim <- c(0, 5.2)\n\np1 <- a1 %>% filter(perm == 1)\nclass(p1) <- c('scanonevar', 'tbl_df', 'tbl', 'data.frame')\np2 <- a2 %>% filter(perm == 1)\nplot(x =  p1, y = p2,\n\t\t show.equations = FALSE, legend.pos = NA, ylim = ylim, title.cex = 1.2, title = 'randomization 1 of phenotype 2', suppress.chromosome = TRUE)\nabline(h = c(max(p1$full.lod), max(p1$mean.lod), max(p1$var.lod), max(p2$lod)), col = c('black', 'blue', 'red', 'forestgreen'), lwd = 2)\n\n\np3 <- a1 %>% filter(perm == 2)\nclass(p3) <- c('scanonevar', 'tbl_df', 'tbl', 'data.frame')\np4 <- a2 %>% filter(perm == 2)\nplot(x =  p3, y = p4,\n\t\t show.equations = FALSE, legend.pos = NA, ylim = ylim, title.cex = 1.2, title = 'randomization 2 of phenotype 2', suppress.chromosome = TRUE)\nabline(h = c(max(p3$full.lod), max(p3$mean.lod), max(p3$var.lod), max(p4$lod)), col = c('black', 'blue', 'red', 'forestgreen'), lwd = 2)\n\n\np5 <- a1 %>% filter(perm == 3)\nclass(p5) <- c('scanonevar', 'tbl_df', 'tbl', 'data.frame')\np6 <- a2 %>% filter(perm == 3)\nplot(x =  p5, y = p6,\n\t\t show.equations = FALSE, legend.pos = NA, ylim = ylim, title.cex = 1.2, title = 'randomization 3 of phenotype 2', suppress.chromosome = TRUE)\nabline(h = c(max(p5$full.lod), max(p5$mean.lod), max(p5$var.lod), max(p6$lod)), col = c('black', 'blue', 'red', 'forestgreen'), lwd = 2)\n\n# three dots in bottom left corner to indicate \"more perms follow...\"\npar(mar = c(2, 0, 0, 0))\nplot(x = rep(0.5, 3), y = c(0.1, 0.5, 0.9), axes = FALSE, xlim = c(0, 1), ylim = c(0, 1), xlab = NA, ylab = NA, pch = 16, cex = 1.5)\n\n\n\n\n# first column of right side, drops down into DGLM-joint histogram\npar(mar = c(2.1, 0, 3.1, 0), xpd = NA)\nplot(x = NA, xlim = c(0, 1), ylim = ylim, axes = FALSE, xlab = NA, ylab = NA)\nsegments(x0 = 0.4, x1 = 0.4,\n\t\t\t\t y0 = max(p1$full.lod), y1 = -23, col = add.alpha(col = 'black', alpha = 0.6))\nsegments(x0 = rep(0, 4), x1 = c(0.4, 1, 1, 1),\n\t\t\t\t y0 = c(max(p1$full.lod), max(p1$mean.lod), max(p1$var.lod), max(p2$lod)),\n\t\t\t\t y1 = c(max(p1$full.lod), max(p1$mean.lod), max(p1$var.lod), max(p2$lod)),\n\t\t\t\t col = add.alpha(col = c('black', 'blue', 'red', 'forestgreen'), alpha = 0.6))\n\n\nplot(x = NA, xlim = c(0, 1), ylim = ylim, axes = FALSE, xlab = NA, ylab = NA)\nsegments(x0 = 0.5, x1 = 0.5,\n\t\t\t\t y0 = max(p3$full.lod), y1 = -13, col = add.alpha(col = 'black', alpha = 0.6))\nsegments(x0 = rep(0, 4), x1 = c(0.5, 1, 1, 1),\n\t\t\t\t y0 = c(max(p3$full.lod), max(p3$mean.lod), max(p3$var.lod), max(p4$lod)),\n\t\t\t\t y1 = c(max(p3$full.lod), max(p3$mean.lod), max(p3$var.lod), max(p4$lod)),\n\t\t\t\t col = add.alpha(col = c('black', 'blue', 'red', 'forestgreen'), alpha = 0.6))\n\nplot(x = NA, xlim = c(0, 1), ylim = ylim, axes = FALSE, xlab = NA, ylab = NA)\nsegments(x0 = 0.6, x1 = 0.6,\n\t\t\t\t y0 = max(p5$full.lod), y1 = -3, col = add.alpha(col = 'black', alpha = 0.6))\nsegments(x0 = rep(0, 4), x1 = c(0.6, 1, 1, 1),\n\t\t\t\t y0 = c(max(p5$full.lod), max(p5$mean.lod), max(p5$var.lod), max(p6$lod)),\n\t\t\t\t y1 = c(max(p5$full.lod), max(p5$mean.lod), max(p5$var.lod), max(p6$lod)),\n\t\t\t\t col = add.alpha(col = c('black', 'blue', 'red', 'forestgreen'), alpha = 0.6))\n\nhist(x = rnorm(n = 1000), main = NA, axes = FALSE, ylab = NA, xlab = NA, col = add.alpha(col = 'black', alpha = 0.6))\nmtext(text = 'mvQTL', side = 1, cex = 0.8)\n\n\n\n\n# second column of right side, drops down into DGLM-mean histogram\nplot(x = NA, xlim = c(0, 1), ylim = ylim, axes = FALSE, xlab = NA, ylab = NA)\nsegments(x0 = 0.4, x1 = 0.4,\n\t\t\t\t y0 = max(p1$mean.lod), y1 = -23, col = add.alpha(col = 'blue', alpha = 0.6))\nsegments(x0 = rep(0, 3), x1 = c(0.4, 1, 1),\n\t\t\t\t y0 = c(max(p1$mean.lod), max(p1$var.lod), max(p2$lod)),\n\t\t\t\t y1 = c(max(p1$mean.lod), max(p1$var.lod), max(p2$lod)),\n\t\t\t\t col = add.alpha(col = c('blue', 'red', 'forestgreen'), alpha = 0.6))\n\nplot(x = NA, xlim = c(0, 1), ylim = ylim, axes = FALSE, xlab = NA, ylab = NA)\nsegments(x0 = 0.5, x1 = 0.5,\n\t\t\t\t y0 = max(p3$mean.lod), y1 = -13, col = add.alpha(col = 'blue', alpha = 0.6))\nsegments(x0 = rep(0, 3), x1 = c(0.5, 1, 1),\n\t\t\t\t y0 = c(max(p3$mean.lod), max(p3$var.lod), max(p4$lod)),\n\t\t\t\t y1 = c(max(p3$mean.lod), max(p3$var.lod), max(p4$lod)),\n\t\t\t\t col = add.alpha(col = c('blue', 'red', 'forestgreen'), alpha = 0.6))\n\nplot(x = NA, xlim = c(0, 1), ylim = ylim, axes = FALSE, xlab = NA, ylab = NA)\nsegments(x0 = 0.6, x1 = 0.6,\n\t\t\t\t y0 = max(p5$mean.lod), y1 = -3, col = add.alpha(col = 'blue', alpha = 0.6))\nsegments(x0 = rep(0, 3), x1 = c(0.6, 1, 1),\n\t\t\t\t y0 = c(max(p5$mean.lod), max(p5$var.lod), max(p6$lod)),\n\t\t\t\t y1 = c(max(p5$mean.lod), max(p5$var.lod), max(p6$lod)),\n\t\t\t\t col = add.alpha(col = c('blue', 'red', 'forestgreen'), alpha = 0.6))\n\nhist(x = rnorm(n = 1000), main = NA, axes = FALSE, ylab = NA, xlab = NA, col = add.alpha(col = 'blue', alpha = 0.6))\nmtext(text = 'mQTL', side = 1, cex = 0.8)\n\n\n\n\n\n# third column of right side, drops down into DGLM-var histogram\nplot(x = NA, xlim = c(0, 1), ylim = ylim, axes = FALSE, xlab = NA, ylab = NA)\nsegments(x0 = 0.4, x1 = 0.4,\n\t\t\t\t y0 = max(p1$var.lod), y1 = -23, col = add.alpha(col = 'red', alpha = 0.6))\nsegments(x0 = rep(0, 2), x1 = c(0.4, 1),\n\t\t\t\t y0 = c(max(p1$var.lod), max(p2$lod)),\n\t\t\t\t y1 = c(max(p1$var.lod), max(p2$lod)),\n\t\t\t\t col = add.alpha(col = c('red', 'forestgreen'), alpha = 0.6))\n\nplot(x = NA, xlim = c(0, 1), ylim = ylim, axes = FALSE, xlab = NA, ylab = NA)\nsegments(x0 = 0.5, x1 = 0.5,\n\t\t\t\t y0 = max(p3$var.lod), y1 = -13, col = add.alpha(col = 'red', alpha = 0.6))\nsegments(x0 = rep(0, 2), x1 = c(0.5, 1),\n\t\t\t\t y0 = c(max(p3$var.lod), max(p4$lod)),\n\t\t\t\t y1 = c(max(p3$var.lod), max(p4$lod)),\n\t\t\t\t col = add.alpha(col = c('red', 'forestgreen'), alpha = 0.6))\n\nplot(x = NA, xlim = c(0, 1), ylim = ylim, axes = FALSE, xlab = NA, ylab = NA)\nsegments(x0 = 0.6, x1 = 0.6,\n\t\t\t\t y0 = max(p5$var.lod), y1 = -3, col = add.alpha(col = 'red', alpha = 0.6))\nsegments(x0 = rep(0, 2), x1 = c(0.6, 1),\n\t\t\t\t y0 = c(max(p5$var.lod), max(p6$lod)),\n\t\t\t\t y1 = c(max(p5$var.lod), max(p6$lod)),\n\t\t\t\t col = add.alpha(col = c('red', 'forestgreen'), alpha = 0.6))\n\nhist(x = rnorm(n = 1000), main = NA, axes = FALSE, ylab = NA, xlab = NA, col = add.alpha(col = 'red', alpha = 0.6))\nmtext(text = 'vQTL', side = 1, cex = 0.8)\n\n\n\n\n\n\n\n\n# third column of right side, drops down into LM histogram\nplot(x = NA, xlim = c(0, 1), ylim = ylim, axes = FALSE, xlab = NA, ylab = NA)\nsegments(x0 = 0.4, x1 = 0.4,\n\t\t\t\t y0 = max(p2$lod), y1 = -23, col = add.alpha(col = 'forestgreen', alpha = 0.6))\nsegments(x0 = 0, x1 = 0.4,\n\t\t\t\t y0 = c(max(p2$lod)),\n\t\t\t\t y1 = c(max(p2$lod)),\n\t\t\t\t col = add.alpha(col = c('forestgreen'), alpha = 0.6))\n\nplot(x = NA, xlim = c(0, 1), ylim = ylim, axes = FALSE, xlab = NA, ylab = NA)\nsegments(x0 = 0.5, x1 = 0.5,\n\t\t\t\t y0 = max(p4$lod), y1 = -13, col = add.alpha(col = 'forestgreen', alpha = 0.6))\nsegments(x0 = 0, x1 = c(0.5),\n\t\t\t\t y0 = c(max(p4$lod)),\n\t\t\t\t y1 = c(max(p4$lod)),\n\t\t\t\t col = add.alpha(col = c('forestgreen'), alpha = 0.6))\n\nplot(x = NA, xlim = c(0, 1), ylim = ylim, axes = FALSE, xlab = NA, ylab = NA)\nsegments(x0 = 0.6, x1 = 0.6,\n\t\t\t\t y0 = max(p6$lod), y1 = -3, col = add.alpha(col = 'forestgreen', alpha = 0.6))\nsegments(x0 = 0, x1 = c(0.6),\n\t\t\t\t y0 = c(max(p6$lod)),\n\t\t\t\t y1 = c(max(p6$lod)),\n\t\t\t\t col = add.alpha(col = c('forestgreen'), alpha = 0.6))\n\nhist(x = rnorm(n = 1000), main = NA, axes = FALSE, ylab = NA, xlab = NA, col = add.alpha(col = 'forestgreen', alpha = 0.6))\nmtext(text = 'QTL', side = 1, cex = 0.8)\n\n\n# dev.off()\n",
    "created" : 1466480970252.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "3|36|8|0|\n",
    "hash" : "446115966",
    "id" : "A0264F05",
    "lastKnownWriteTime" : 1466487657,
    "last_content_update" : 1466487829017,
    "path" : "~/Dropbox (ValdarLab)/Aim1/2016_G3_PackageVQTL_Corty/scripts/make_FWER_figure.R",
    "project_path" : "scripts/make_FWER_figure.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}